{"version":3,"file":"create-prerelease.js","sourceRoot":"/","sources":["create-prerelease.ts"],"names":[],"mappings":";;;AAEO,KAAK,UAAU,gBAAgB,CAClC,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAmB,EAC7C,GAAW;IAEX,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;IACrC,MAAM,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;QAC/B,KAAK;QACL,IAAI;QACJ,GAAG,EAAE,aAAa,GAAG,EAAE;QACvB,GAAG,EAAE,OAAO,CAAC,GAAG;KACjB,CAAC,CAAC;IAEH,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QACxD,KAAK;QACL,IAAI;QACJ,UAAU,EAAE,IAAI;QAChB,QAAQ,EAAE,GAAG;QACb,IAAI,EAAE,GAAG;QACT,sBAAsB,EAAE,IAAI;KAC7B,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,uBAAuB,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AACjE,CAAC;AAtBH,4CAsBG","sourcesContent":["import { ContextArgument } from \"./context\";\n\nexport async function createPrerelease(\n    { octokit, context, logger }: ContextArgument,\n    tag: string\n  ) {\n    const { owner, repo } = context.repo;\n    await octokit.rest.git.createRef({\n      owner,\n      repo,\n      ref: `refs/tags/${tag}`,\n      sha: context.sha,\n    });\n  \n    const newRelease = await octokit.rest.repos.createRelease({\n      owner,\n      repo,\n      prerelease: true,\n      tag_name: tag,\n      name: tag,\n      generate_release_notes: true,\n    });\n  \n    logger.info(`Created prerelease: ${newRelease.data.html_url}`);\n  }\n  "]}