{"version":3,"file":"action-perform-postrelease.js","sourceRoot":"/","sources":["action-perform-postrelease.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wDAA0C;AAC1C,oDAAsC;AACtC,uCAA0C;AAC1C,+DAA2D;AAE3D,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;AAClD,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AAC9C,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AAC/C,IAAA,wCAAkB,EAAC,IAAA,uBAAa,EAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;KAC1E,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;IACf,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;AACnD,CAAC,CAAC;KACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;IACX,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC","sourcesContent":["import * as github from \"@actions/github\";\nimport * as core from \"@actions/core\";\nimport { createContext } from \"./context\";\nimport { performPostRelease } from \"./perform-postrelease\";\n\nconst githubToken = core.getInput(\"github-token\");\nconst releaseId = core.getInput(\"release-id\");\nconst octokit = github.getOctokit(githubToken);\nperformPostRelease(createContext(octokit, github.context), Number(releaseId))\n  .then((result) => {\n    core.setOutput(\"release-url\", result.releaseUrl);\n  })\n  .catch((e) => {\n    core.setFailed(e);\n  });\n"]}